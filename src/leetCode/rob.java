package leetCode;

/**
 * @Description: 你是一个专业的小偷，计划偷窃沿街的房屋。每间房内都藏有一定的现金，影响你偷窃的唯一制约因素就是相邻的房屋装有相互连通的防盗系统，如果两间相邻的房屋在同一晚上被小偷闯入，系统会自动报警。
 *
 * 给定一个代表每个房屋存放金额的非负整数数组，计算你 不触动警报装置的情况下 ，一夜之内能够偷窃到的最高金额。
 *
 * ? 示例 1：
 *
 * 输入：[1,2,3,1] 输出：4 解释：偷窃 1 号房屋 (金额 = 1) ，然后偷窃 3 号房屋 (金额 = 3)。 ?    偷窃到的最高金额 = 1 + 3 = 4 。
 *
 * 来源：力扣（LeetCode） 链接：https://leetcode-cn.com/problems/house-robber 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
 * @Author: wangxutao@qiyi.com
 * @Date: 4/15/21 1:09 AM
 */
public class rob {

  public static int rob(int[] nums) {
    if (nums.length == 0) {
      return 0;
    }
    if (nums.length == 1) {
      return nums[0];
    }
    int[] dp = new int[nums.length];
    dp[0] = nums[0];
    dp[1] = nums[0] >= nums[1] ? nums[0] : nums[1];
    for (int i = 2; i < nums.length; i++) {
      int stoleIt = nums[i] + dp[i - 2];
      int notStoleIt = dp[i - 1];
      dp[i] = stoleIt >= notStoleIt ? stoleIt : notStoleIt;
    }
    int sum = 0;
    for (int i = 0; i < nums.length; i++) {
      if (dp[i] > sum) {
        sum = dp[i];
      }
    }
    return sum;
  }


}
